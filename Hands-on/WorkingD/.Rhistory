Stock.score.extraction <- read.csv("~/Stock-score-extraction.csv")
View(Stock.score.extraction)
View(Stock.score.extraction)
setwd("D:/22-Trngs/2-Confirmed/1-Python-R-Programming/GH/Hands-on/WorkingD")
# Assignment using equal operator.
var.1 = c(0,1,2,3)
# Assignment using equal operator.
var.1 = c(0,1,2,3)
# Assignment using leftward operator.
var.2 <- c("learn","R")
print(var.1)
cat ("var.1 is ", var.1 ,"\n")
cat ("var.2 is ", var.2 ,"\n")
cat ("var.3 is ", var.3 ,"\n")
# Assignment using rightward operator.
c(TRUE,1) -> var.3
cat ("var.3 is ", var.3 ,"\n")
o <- c(1,2,5.3,6,-2,4)       # Numeric vector
p <- c("one","two","three","four","five","six")   # Character vector
q <- c(TRUE,TRUE,FALSE,TRUE,FALSE,TRUE)   #Logical vector
o;p;q
o[q]   # Logical vector can be used to extract vector components
names(o) <- p   # Give each component a name
o
o["three"]      # Extract your components by "calling" their names
1:12
t <- matrix(1:12,nrow=4,ncol=3,byrow = FALSE)
t
t <- matrix(1:12,nrow=4,ncol=3,byrow = TRUE)
t
t[2,3]                    # component at 2nd row and 3rd column
t[,3]                     # 3rd column of matrix
t[4,]                     # 4th row of matrix
t[2:4,1:3]                # rows 2,3,4 of columns
mydata <- data.frame(d,e,f)
d <- c(1,2,3,4)
e <- c("red", "white", "red", NA)
f <- c(TRUE,TRUE,TRUE,FALSE)
mydata <- data.frame(d,e,f)
names(mydata) <- c("ID","Color","Passed")      # variable names
mydata
View(mydata)
View(mydata)
mydata[1:2,]                    # first two records
mydata[1:2,1:2]                    # first two records
mydata[1:2,1:5]                    # first two records
mydata[1:2,1:3]                    # first two records
# a list with a vector, a matrix, a data frame defined earlier and a scalar
p=c("one", "two", "three", "four", "five", "six")
l <-list(vec=p, mat=t, fra=mydata, count=3)
l$vec
l$mat
l.mat
l$fra
l$count
l$mat[2,3]
l$fra$Color
setwd("~/WorkingD")
getwd()
mydata <- read.csv("empdata.csv", header=TRUE, row.names="Employee_ID")
mydata <- read.csv("empdata.csv", header=TRUE, row.names="Employee_ID")
mydata
mydata <- read.csv("empdata.csv", header=TRUE, row.names="Employee_ID")
mydata
View(mydata)
install.packages("rJava")
install.packages("xlsx")
library(xlsx)
write.xlsx(mydata, "EmployeeSales.xlsx", row.names= F)
mydata <- read.xlsx("EmployeeSales.xlsx", 1)
mydata
# read in the worksheet named mysheet
mydata <- read.xlsx("EmployeeSales.xlsx", sheetName = "Sheet1")
mydata
dim(iris)
names(iris)
str(iris)
attributes(iris)
iris[1:3, ]
head(iris, 3)
tail(iris, 3)
head(iris)
tail(iris)
#The first 10 values of Sepal.Length
iris[1:10, "Sepal.Length"]
summary(iris)
iris
iris_my = iris
View(iris_my)
range(iris$Sepal.Length)
quantile(iris$Sepal.Length)
quantile(iris$Sepal.Length, c(0.1, 0.3, 0.65))
quantile(iris$Sepal.Length, c(0, 0.25, 0.5, 0.75. 1))
quantile(iris$Sepal.Length, c(0, 0.25, 0.5, 0.75, 1))
quantile(iris$Sepal.Length)
quantile(iris$Sepal.Length, c(0.25, 0.5, 0.75))
var(iris$Sepal.Length)
hist(iris$Sepal.Length)
plot(density(iris$Sepal.Length))
table(iris$Species)
table(iris$Species)
iris$Species
table(iris$Species)
pie(table(iris$Species))
pie(table(iris$Species))
barplot(table(iris$Species))
reticulate::repl_python()
print("Atin")
print(a)
a = 5
print(a)
